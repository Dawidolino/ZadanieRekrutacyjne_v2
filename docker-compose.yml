
version: '3.9'

services:
  zadanierekrutacyjne:
    environment:
      - ASPNETCORE_ENVIRONMENT= Development
      - ASPNETCORE_HTTP_PORTS=5049
      - ASPNETCORE_HTTPS_PORTS=7182
      - ASPNETCORE_Kester__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/tags.pfx
    container_name: zadanierekrutacyjne
    image: zadanierekrutacyjne
    build:
      context: .
      dockerfile: ZadanieRekrutacyjne/Dockerfile
    ports:
      - "5049:5049"  
      - "7182:7182"  
    volumes:
    - ~/.ZadanieRekrutacyjne/https:/https:ro
   
    # ConnectionStrings__DefaultConnection: "Server=host.docker.internal;Database=TagDB;User=sa;Password=Haslo1234;Trusted_Connection=False;MultipleActiveResultSets=true;TrustServerCertificate=True;"
    depends_on:
      database.server:
        condition: service_healthy
    # networks:
    #   - default

  database.server:
    image: "mcr.microsoft.com/mssql/server"
    container_name: database.server
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Haslo1234"
    ports:
      - "1433:1433"
    volumes:
      - ./sqlserver/data:/var/opt/mssql/data
      - ./sqlserver/log:/var/opt/mssql/data

    healthcheck:
     test: /opt/mssql-tools/bin/sqlcommand -S localhost -U sa -P "Haslo1234" -Q "SELECT 1" -b -o /dev/null
     interval: 10s
     timeout: 3s
     retries: 10
     start_period: 10s
#     networks:
#       - default

# networks:
#   default:
